import "example/stdio.fk"

enum {
    OP_PUSH
    OP_PLUS
    OP_PRINT
}

struct VM {
    stack = []
    ip = 0

    def push(s, v) {
        s.stack = append(s.stack, v)
    }

    def pop(s) {
        sz = len(s.stack)
        rs = s.stack[sz-1]
        s.stack = remove(s.stack, sz-1)
        return rs
    }
}

def execute(prog) {
    vm = VM()

    while (vm.ip < len(prog)) : (vm.ip += 1) {
        inst = prog[vm.ip]
        case (inst[0]) {
            OP_PUSH => vm.push(inst[1])
            OP_PLUS => {
                a = vm.pop()
                b = vm.pop()
                vm.push(a + b)
            }
            OP_PRINT => {
                a = vm.pop()
                println(a)
            }
            else => println("unknown instruction")
        }
    }
}

prog = [
    [OP_PUSH, 33],
    [OP_PUSH, 36],
    [OP_PLUS],
    [OP_PRINT],
]

execute(prog)
